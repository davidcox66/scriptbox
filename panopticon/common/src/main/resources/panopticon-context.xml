<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:conditional="http://scriptbox.org/spring/conditional"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://scriptbox.org/spring/conditional http://scriptbox.org/spring/conditional.xsd">
	
	<import resource="classpath:box-basic-context.xml" />

  	<bean id="runtimeConfigurer" class="org.scriptbox.util.spring.context.EvalConfigurer">
	 	<property name="locations">
		  <list>
			<value>classpath*:panopticon.properties</value>
		  </list>
		</property>
    	<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
    	<property name="ignoreUnresolvablePlaceholders" value="true" />
  	</bean>
	
	<conditional:dependency classes="groovy.lang.GroovyShell" >
		<bean name="runGroovyInjector" class="org.scriptbox.box.plugins.run.RunGroovyInjector" p:plugin-ref="run" />
		<bean name="quartzGroovyInjector" class="org.scriptbox.box.plugins.quartz.QuartzGroovyInjector" p:plugin-ref="quartz" />
		<bean name="jmxGroovyInjector" class="org.scriptbox.panopticon.jmx.JmxGroovyInjector" />
		<bean name="tcpstatGroovyInjector" class="org.scriptbox.panopticon.net.TcpstatGroovyInjector" p:plugin-ref="tcpstat" />
		<bean name="tcpdumpGroovyInjector" class="org.scriptbox.panopticon.net.TcpdumpGroovyInjector" p:plugin-ref="tcpdump" />
		<bean name="topGroovyInjector" class="org.scriptbox.panopticon.top.TopGroovyInjector" p:plugin-ref="top" />
		<bean name="vmstatGroovyInjector" class="org.scriptbox.panopticon.vmstat.VmstatGroovyInjector" p:plugin-ref="vmstat" />
		<bean name="apacheGroovyInjector" class="org.scriptbox.panopticon.apache.ApacheGroovyInjector" p:plugin-ref="apache" />
		<bean name="tailGroovyInjector" class="org.scriptbox.panopticon.tail.TailGroovyInjector" p:plugin-ref="tail" />
		<bean name="mailGroovyInjector" class="org.scriptbox.panopticon.mail.MailGroovyInjector" p:plugin-ref="mail" />
		<bean name="eventsGroovyInjector" class="org.scriptbox.panopticon.events.EventsGroovyInjector" p:plugin-ref="events" />
		<bean name="utilGroovyInjector" class="org.scriptbox.panopticon.util.UtilGroovyInjector" p:plugin-ref="util" />
	</conditional:dependency>
	
    <bean name="quartzListeners" class="org.scriptbox.util.spring.context.BeanListFactoryBean" 
      p:beanType="org.scriptbox.box.plugins.quartz.QuartzListener" />
    
    <bean name="run" class="org.scriptbox.box.plugins.run.RunPlugin" />
    <bean name="quartz" class="org.scriptbox.box.plugins.quartz.QuartzPlugin" p:listeners-ref="quartzListeners" />
    <bean name="jmx" class="org.scriptbox.panopticon.jmx.JmxPlugin" />
    <bean name="tcpstat" class="org.scriptbox.panopticon.net.TcpstatPlugin" p:store-ref="store" />
    <bean name="tcpdump" class="org.scriptbox.panopticon.net.TcpdumpPlugin" p:store-ref="store" />
    <bean name="top" class="org.scriptbox.panopticon.top.TopPlugin" p:store-ref="store" />
    <bean name="vmstat" class="org.scriptbox.panopticon.vmstat.VmstatPlugin" p:store-ref="store" />
    <bean name="apache" class="org.scriptbox.panopticon.apache.ApachePlugin" p:store-ref="store" />
    <bean name="tail" class="org.scriptbox.panopticon.tail.TailPlugin" />
    <bean name="mail" class="org.scriptbox.panopticon.mail.MailPlugin" />
    <bean name="events" class="org.scriptbox.panopticon.events.EventsPlugin" />
    <bean name="util" class="org.scriptbox.panopticon.util.UtilPlugin" />
   
	<bean name="monitorImpl" class="org.scriptbox.box.remoting.server.BoxWithServices" init-method="start" p:box-ref="box" />

	<bean id="serviceErrorHandler" class="org.scriptbox.util.spring.aop.ServiceErrorHandler" />
 
	<bean id="monitor" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="target" ref="monitorImpl" />
		<property name="interceptorNames">
			<list>
				<value>serviceErrorHandler</value>
			</list>
		</property>
	</bean>
	
  	<bean name="/lm/" class="org.springframework.remoting.caucho.HessianServiceExporter"
  		p:service-ref="monitor"
  		p:serviceInterface="org.scriptbox.box.remoting.server.BoxInterface" />

	<bean name="cassandraTunnelCredentials" class="org.scriptbox.util.remoting.tunnel.TunnelCredentials" 
		p:user="${cassandra.tunnel.user}"
		p:password="${cassandra.tunnel.password}"
		p:passphrase="${cassandra.tunnel.passphrase}" />
		
	<bean name="cassandraTunnel" class="org.scriptbox.util.remoting.tunnel.Tunnel" 
		p:tunnelHost="${cassandra.tunnel.host}"
		p:tunnelPort="${cassandra.tunnel.port}"
		p:remoteHost="${cassandra.host}"
		p:remotePort="${cassandra.port}" 
		p:credentials-ref="cassandraTunnelCredentials" />
		
  	<bean name="clusterFactory" class="org.scriptbox.util.cassandra.CassandraClusterFactory"
                p:name="Test Cluster"
                p:host="${cassandra.host}"
                p:port="${cassandra.port}"
                p:tunnel-ref="cassandraTunnel" />
                
    <bean name="cluster"
        factory-bean="clusterFactory"
        factory-method="getInstance" />    
        
    <bean name="keyspaceFactory" class="org.scriptbox.util.cassandra.CassandraKeyspaceFactory"
        p:cluster-ref="cluster" />
        
    <bean name="keyspace" class="me.prettyprint.hector.api.Keyspace"
        factory-bean="keyspaceFactory"
        factory-method="getInstance">      
            <constructor-arg value="Metrics" />
    </bean>

	<!-- 
  	<bean name="store" class="org.scriptbox.panopticon.jmx.capture.CsvCaptureStore"
  		p:instance="local"
  		p:path="/tmp/metrics.csv" />
  	-->

	<bean name="nameSplitter" class="org.scriptbox.panopticon.capture.PatternNameSplitter"  	
		p:pattern="[,.]" />
		
    <bean name="store" class="org.scriptbox.panopticon.capture.CassandraCaptureStore"
    	p:cluster-ref="cluster"
    	p:keyspace-ref="keyspace"
    	p:instance="${box.instance}" 
    	p:nameSplitter-ref="nameSplitter" />

	<conditional:present property="ssh.host" set="true" >
	 	<bean name="endpoint" class="org.scriptbox.util.remoting.endpoint.SshTunnelEndpoint" 
	    	p:tunnelHost="${ssh.host}"
	    	p:tunnelPort="${ssh.port}" 
	    	p:user="${ssh.user}" 
	    	p:password="${ssh.password}" 
	    	p:host="${jetty.hostname}"
	    	p:port="${jetty.port}" />
	</conditional:present>
	 
	<conditional:present property="ssh.host" set="false" >
	 	<bean name="endpoint" class="org.scriptbox.util.remoting.endpoint.TcpEndpoint" 
	    	p:host="${jetty.hostname}"
	    	p:port="${jetty.port}" />
	 </conditional:present>
 	
    <bean name="heartbeats" class="org.scriptbox.util.cassandra.heartbeat.EndpointHeartbeatGenerator"
    	init-method="start"
    	p:cluster-ref="cluster"
    	p:keyspace-ref="keyspace"
    	p:interval="60"
    	p:ttl="120"
    	p:group="panopticon"
    	p:type="monitor"
    	p:id="${box.instance}"
    	p:tags="${heartbeat.tags}"
    	p:endpoint-ref="endpoint" />
    	
</beans>