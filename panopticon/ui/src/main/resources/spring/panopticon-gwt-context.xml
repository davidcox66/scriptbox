<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:conditional="http://lrd.com/spring/conditional"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
          http://lrd.com/spring/conditional http://lrd.com/spring/conditional.xsd">
          
  	<context:component-scan base-package="org.scriptbox" />

  	<bean id="annotationServiceLocator" class="org.scriptbox.util.gwt.server.remote.locator.AnnotationServiceLocator"/>
  
  	<bean id="configurer" class="org.scriptbox.util.spring.context.EvalConfigurer"> 
	 	<property name="locations">
		  <list>
			<value>classpath*:panopticon-ui.properties</value>
		  </list>
		</property>
    	<property name="environmentAware" value="true" />
    	<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
  	</bean>

	<bean name="tunnelCredentials" class="org.scriptbox.util.remoting.tunnel.TunnelCredentials" 
		p:user="${tunnel.user}"
		p:password="${tunnel.password}"
		p:passphrase="${tunnel.passphrase}" />
		
	<bean name="tunnel" class="org.scriptbox.util.remoting.tunnel.Tunnel" 
		p:tunnelHost="${tunnel.host}"
		p:tunnelPort="${tunnel.port}"
		p:remoteHost="${cassandra.host}"
		p:remotePort="${cassandra.port}" 
		p:credentials-ref="tunnelCredentials" />
		
  	<bean name="clusterFactory" class="org.scriptbox.util.cassandra.CassandraClusterFactory"
                p:name="Test Cluster"
                p:host="${cassandra.host}"
                p:port="${cassandra.port}"
                p:tunnel-ref="tunnel" />
                
    <bean name="cluster"
        factory-bean="clusterFactory"
        factory-method="getInstance" />    
    <bean name="keyspaceFactory" class="org.scriptbox.util.cassandra.CassandraKeyspaceFactory"
        p:cluster-ref="cluster" />
    <bean name="keyspace" class="me.prettyprint.hector.api.Keyspace"
        factory-bean="keyspaceFactory"
        factory-method="getInstance">      
            <constructor-arg value="Metrics" />
    </bean>

    <bean name="store" class="org.scriptbox.metrics.cassandra.CassandraMetricStore"
    	p:cluster-ref="cluster"
    	p:keyspace-ref="keyspace" />
    	
    <bean name="treeService" class="org.scriptbox.ui.server.chart.ChartGWTServiceImpl"
    	p:store-ref="store">
    	<property name="reportPaths">
    		<list>
    			<value>${reports.dir}</value>
    		</list>
    	</property>
    	<property name="metricDescriptionProcessors">
    		<list>
    			<bean class="org.scriptbox.ui.server.chart.ReplacementPostProcessor"
    				p:pattern="\([^(]*?\)"
    				p:replacement="" />
    			<bean class="org.scriptbox.ui.server.chart.ReportElementProcessor"  />
    			<bean class="org.scriptbox.ui.server.chart.MinifyingPostProcessor" />
    			<bean class="org.scriptbox.ui.server.chart.MaxLengthPostProcessor" 
    				p:maximumLength="25" />
    		</list>
    	</property>
    </bean>
    
    <bean name="agentService" class="org.scriptbox.ui.server.agent.AgentGWTServiceImpl"
    	p:cluster-ref="cluster"
    	p:keyspace-ref="keyspace" />
    
    <bean id="serviceAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
    	<constructor-arg type="org.springframework.aop.Pointcut" >
         	<bean id="servicePointcut" class="org.springframework.aop.support.annotation.AnnotationMatchingPointcut" >
            	<constructor-arg value="org.springframework.stereotype.Service" />
            	<constructor-arg value="true" />
         	</bean>
    	</constructor-arg>
    	<constructor-arg type="org.aopalliance.aop.Advice">
        	<ref bean="gwtInterceptor" />
    	</constructor-arg>
	</bean>

	<bean id="repositoryAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
    	<constructor-arg type="org.springframework.aop.Pointcut" >
         	<bean id="repositoryPointcut" class="org.springframework.aop.support.annotation.AnnotationMatchingPointcut" >
            	<constructor-arg value="org.springframework.stereotype.Repository" />
	            <constructor-arg value="true" />
	         </bean>
	    </constructor-arg>
	    <constructor-arg type="org.aopalliance.aop.Advice">
	        <ref bean="gwtInterceptor" />
	    </constructor-arg>
	</bean>

	<!-- 
	<bean id="springAdvisor" class="org.springframework.aop.support.DefaultPointcutAdvisor">
	    <constructor-arg type="org.springframework.aop.Pointcut" >
	         <bean id="springPointcut" class="org.springframework.aop.support.annotation.AnnotationMatchingPointcut" >
	            <constructor-arg value="org.joule.spring.SpringInterceptors" />
	            <constructor-arg value="true" />
	         </bean>
	    </constructor-arg>
	    <constructor-arg type="org.aopalliance.aop.Advice">
	        <ref bean="gwtInterceptor" />
	    </constructor-arg>
	</bean>
	-->
	
	<bean id="gwtInterceptor" class="org.scriptbox.util.gwt.server.remote.ServiceExceptionInterceptor" />
	    	
</beans>
